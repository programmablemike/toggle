// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: toggle/v1/toggle.proto

package togglev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ToggleValue int32

const (
	ToggleValue_TOGGLE_OFF ToggleValue = 0
	ToggleValue_TOGGLE_ON  ToggleValue = 1
)

// Enum value maps for ToggleValue.
var (
	ToggleValue_name = map[int32]string{
		0: "TOGGLE_OFF",
		1: "TOGGLE_ON",
	}
	ToggleValue_value = map[string]int32{
		"TOGGLE_OFF": 0,
		"TOGGLE_ON":  1,
	}
)

func (x ToggleValue) Enum() *ToggleValue {
	p := new(ToggleValue)
	*p = x
	return p
}

func (x ToggleValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToggleValue) Descriptor() protoreflect.EnumDescriptor {
	return file_toggle_v1_toggle_proto_enumTypes[0].Descriptor()
}

func (ToggleValue) Type() protoreflect.EnumType {
	return &file_toggle_v1_toggle_proto_enumTypes[0]
}

func (x ToggleValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToggleValue.Descriptor instead.
func (ToggleValue) EnumDescriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{0}
}

// General use types
type NameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *NameInfo) Reset() {
	*x = NameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toggle_v1_toggle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameInfo) ProtoMessage() {}

func (x *NameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_toggle_v1_toggle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameInfo.ProtoReflect.Descriptor instead.
func (*NameInfo) Descriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{0}
}

func (x *NameInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameInfo) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type ScopeSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info        *NameInfo `protobuf:"bytes,2,opt,name=info,proto3,oneof" json:"info,omitempty"`
	ToggleSetId string    `protobuf:"bytes,3,opt,name=toggle_set_id,json=toggleSetId,proto3" json:"toggle_set_id,omitempty"` // Foreign key ID for Toggle Set
	Scopes      []*Scope  `protobuf:"bytes,4,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *ScopeSet) Reset() {
	*x = ScopeSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toggle_v1_toggle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScopeSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeSet) ProtoMessage() {}

func (x *ScopeSet) ProtoReflect() protoreflect.Message {
	mi := &file_toggle_v1_toggle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeSet.ProtoReflect.Descriptor instead.
func (*ScopeSet) Descriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{1}
}

func (x *ScopeSet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScopeSet) GetInfo() *NameInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ScopeSet) GetToggleSetId() string {
	if x != nil {
		return x.ToggleSetId
	}
	return ""
}

func (x *ScopeSet) GetScopes() []*Scope {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type Scope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info             *NameInfo `protobuf:"bytes,2,opt,name=info,proto3,oneof" json:"info,omitempty"`
	Required         bool      `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	AcceptableValues []string  `protobuf:"bytes,5,rep,name=acceptable_values,json=acceptableValues,proto3" json:"acceptable_values,omitempty"`
}

func (x *Scope) Reset() {
	*x = Scope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toggle_v1_toggle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scope) ProtoMessage() {}

func (x *Scope) ProtoReflect() protoreflect.Message {
	mi := &file_toggle_v1_toggle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scope.ProtoReflect.Descriptor instead.
func (*Scope) Descriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{2}
}

func (x *Scope) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Scope) GetInfo() *NameInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Scope) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Scope) GetAcceptableValues() []string {
	if x != nil {
		return x.AcceptableValues
	}
	return nil
}

type ToggleSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info       *NameInfo `protobuf:"bytes,2,opt,name=info,proto3,oneof" json:"info,omitempty"`
	ScopeSetId string    `protobuf:"bytes,3,opt,name=scope_set_id,json=scopeSetId,proto3" json:"scope_set_id,omitempty"` // Foreign key ID for Scope Set
	Toggles    []*Toggle `protobuf:"bytes,4,rep,name=toggles,proto3" json:"toggles,omitempty"`
}

func (x *ToggleSet) Reset() {
	*x = ToggleSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toggle_v1_toggle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleSet) ProtoMessage() {}

func (x *ToggleSet) ProtoReflect() protoreflect.Message {
	mi := &file_toggle_v1_toggle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleSet.ProtoReflect.Descriptor instead.
func (*ToggleSet) Descriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{3}
}

func (x *ToggleSet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ToggleSet) GetInfo() *NameInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ToggleSet) GetScopeSetId() string {
	if x != nil {
		return x.ScopeSetId
	}
	return ""
}

func (x *ToggleSet) GetToggles() []*Toggle {
	if x != nil {
		return x.Toggles
	}
	return nil
}

type Toggle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info         *NameInfo   `protobuf:"bytes,2,opt,name=info,proto3,oneof" json:"info,omitempty"`
	Value        ToggleValue `protobuf:"varint,3,opt,name=value,proto3,enum=toggle.v1.ToggleValue" json:"value,omitempty"`
	DefaultValue ToggleValue `protobuf:"varint,4,opt,name=default_value,json=defaultValue,proto3,enum=toggle.v1.ToggleValue" json:"default_value,omitempty"`
}

func (x *Toggle) Reset() {
	*x = Toggle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toggle_v1_toggle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Toggle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Toggle) ProtoMessage() {}

func (x *Toggle) ProtoReflect() protoreflect.Message {
	mi := &file_toggle_v1_toggle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Toggle.ProtoReflect.Descriptor instead.
func (*Toggle) Descriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{4}
}

func (x *Toggle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Toggle) GetInfo() *NameInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Toggle) GetValue() ToggleValue {
	if x != nil {
		return x.Value
	}
	return ToggleValue_TOGGLE_OFF
}

func (x *Toggle) GetDefaultValue() ToggleValue {
	if x != nil {
		return x.DefaultValue
	}
	return ToggleValue_TOGGLE_OFF
}

type MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MessageInfo) Reset() {
	*x = MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toggle_v1_toggle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfo) ProtoMessage() {}

func (x *MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_toggle_v1_toggle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfo.ProtoReflect.Descriptor instead.
func (*MessageInfo) Descriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{5}
}

func (x *MessageInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// CreateScopeSet
type CreateScopeSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *MessageInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Value *ScopeSet    `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateScopeSetRequest) Reset() {
	*x = CreateScopeSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toggle_v1_toggle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScopeSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScopeSetRequest) ProtoMessage() {}

func (x *CreateScopeSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toggle_v1_toggle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScopeSetRequest.ProtoReflect.Descriptor instead.
func (*CreateScopeSetRequest) Descriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{6}
}

func (x *CreateScopeSetRequest) GetInfo() *MessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *CreateScopeSetRequest) GetValue() *ScopeSet {
	if x != nil {
		return x.Value
	}
	return nil
}

type CreateScopeSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *MessageInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Value *ScopeSet    `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateScopeSetResponse) Reset() {
	*x = CreateScopeSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toggle_v1_toggle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScopeSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScopeSetResponse) ProtoMessage() {}

func (x *CreateScopeSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toggle_v1_toggle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScopeSetResponse.ProtoReflect.Descriptor instead.
func (*CreateScopeSetResponse) Descriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{7}
}

func (x *CreateScopeSetResponse) GetInfo() *MessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *CreateScopeSetResponse) GetValue() *ScopeSet {
	if x != nil {
		return x.Value
	}
	return nil
}

// CreateScope
type CreateScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *MessageInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Value *Scope       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateScopeRequest) Reset() {
	*x = CreateScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toggle_v1_toggle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScopeRequest) ProtoMessage() {}

func (x *CreateScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toggle_v1_toggle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScopeRequest.ProtoReflect.Descriptor instead.
func (*CreateScopeRequest) Descriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{8}
}

func (x *CreateScopeRequest) GetInfo() *MessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *CreateScopeRequest) GetValue() *Scope {
	if x != nil {
		return x.Value
	}
	return nil
}

type CreateScopeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *MessageInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Value *Scope       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateScopeResponse) Reset() {
	*x = CreateScopeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toggle_v1_toggle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScopeResponse) ProtoMessage() {}

func (x *CreateScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toggle_v1_toggle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScopeResponse.ProtoReflect.Descriptor instead.
func (*CreateScopeResponse) Descriptor() ([]byte, []int) {
	return file_toggle_v1_toggle_proto_rawDescGZIP(), []int{9}
}

func (x *CreateScopeResponse) GetInfo() *MessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *CreateScopeResponse) GetValue() *Scope {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_toggle_v1_toggle_proto protoreflect.FileDescriptor

var file_toggle_v1_toggle_proto_rawDesc = []byte{
	0x0a, 0x16, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x22, 0x55, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x08, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x97, 0x01, 0x0a,
	0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x53,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x07, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xba, 0x01, 0x0a, 0x06, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x1d, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x53, 0x65, 0x74, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6f, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x53, 0x65, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x68, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x69, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x2c, 0x0a, 0x0b,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x54,
	0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x4f, 0x4e, 0x10, 0x01, 0x32, 0xb8, 0x01, 0x0a, 0x0d, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x53, 0x65, 0x74, 0x12, 0x20,
	0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x62, 0x6c, 0x65,
	0x6d, 0x69, 0x6b, 0x65, 0x2f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_toggle_v1_toggle_proto_rawDescOnce sync.Once
	file_toggle_v1_toggle_proto_rawDescData = file_toggle_v1_toggle_proto_rawDesc
)

func file_toggle_v1_toggle_proto_rawDescGZIP() []byte {
	file_toggle_v1_toggle_proto_rawDescOnce.Do(func() {
		file_toggle_v1_toggle_proto_rawDescData = protoimpl.X.CompressGZIP(file_toggle_v1_toggle_proto_rawDescData)
	})
	return file_toggle_v1_toggle_proto_rawDescData
}

var file_toggle_v1_toggle_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_toggle_v1_toggle_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_toggle_v1_toggle_proto_goTypes = []interface{}{
	(ToggleValue)(0),               // 0: toggle.v1.ToggleValue
	(*NameInfo)(nil),               // 1: toggle.v1.NameInfo
	(*ScopeSet)(nil),               // 2: toggle.v1.ScopeSet
	(*Scope)(nil),                  // 3: toggle.v1.Scope
	(*ToggleSet)(nil),              // 4: toggle.v1.ToggleSet
	(*Toggle)(nil),                 // 5: toggle.v1.Toggle
	(*MessageInfo)(nil),            // 6: toggle.v1.MessageInfo
	(*CreateScopeSetRequest)(nil),  // 7: toggle.v1.CreateScopeSetRequest
	(*CreateScopeSetResponse)(nil), // 8: toggle.v1.CreateScopeSetResponse
	(*CreateScopeRequest)(nil),     // 9: toggle.v1.CreateScopeRequest
	(*CreateScopeResponse)(nil),    // 10: toggle.v1.CreateScopeResponse
}
var file_toggle_v1_toggle_proto_depIdxs = []int32{
	1,  // 0: toggle.v1.ScopeSet.info:type_name -> toggle.v1.NameInfo
	3,  // 1: toggle.v1.ScopeSet.scopes:type_name -> toggle.v1.Scope
	1,  // 2: toggle.v1.Scope.info:type_name -> toggle.v1.NameInfo
	1,  // 3: toggle.v1.ToggleSet.info:type_name -> toggle.v1.NameInfo
	5,  // 4: toggle.v1.ToggleSet.toggles:type_name -> toggle.v1.Toggle
	1,  // 5: toggle.v1.Toggle.info:type_name -> toggle.v1.NameInfo
	0,  // 6: toggle.v1.Toggle.value:type_name -> toggle.v1.ToggleValue
	0,  // 7: toggle.v1.Toggle.default_value:type_name -> toggle.v1.ToggleValue
	6,  // 8: toggle.v1.CreateScopeSetRequest.info:type_name -> toggle.v1.MessageInfo
	2,  // 9: toggle.v1.CreateScopeSetRequest.value:type_name -> toggle.v1.ScopeSet
	6,  // 10: toggle.v1.CreateScopeSetResponse.info:type_name -> toggle.v1.MessageInfo
	2,  // 11: toggle.v1.CreateScopeSetResponse.value:type_name -> toggle.v1.ScopeSet
	6,  // 12: toggle.v1.CreateScopeRequest.info:type_name -> toggle.v1.MessageInfo
	3,  // 13: toggle.v1.CreateScopeRequest.value:type_name -> toggle.v1.Scope
	6,  // 14: toggle.v1.CreateScopeResponse.info:type_name -> toggle.v1.MessageInfo
	3,  // 15: toggle.v1.CreateScopeResponse.value:type_name -> toggle.v1.Scope
	7,  // 16: toggle.v1.ToggleService.CreateScopeSet:input_type -> toggle.v1.CreateScopeSetRequest
	9,  // 17: toggle.v1.ToggleService.CreateScope:input_type -> toggle.v1.CreateScopeRequest
	8,  // 18: toggle.v1.ToggleService.CreateScopeSet:output_type -> toggle.v1.CreateScopeSetResponse
	10, // 19: toggle.v1.ToggleService.CreateScope:output_type -> toggle.v1.CreateScopeResponse
	18, // [18:20] is the sub-list for method output_type
	16, // [16:18] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_toggle_v1_toggle_proto_init() }
func file_toggle_v1_toggle_proto_init() {
	if File_toggle_v1_toggle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_toggle_v1_toggle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toggle_v1_toggle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScopeSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toggle_v1_toggle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toggle_v1_toggle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toggle_v1_toggle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Toggle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toggle_v1_toggle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toggle_v1_toggle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScopeSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toggle_v1_toggle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScopeSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toggle_v1_toggle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toggle_v1_toggle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScopeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_toggle_v1_toggle_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_toggle_v1_toggle_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_toggle_v1_toggle_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_toggle_v1_toggle_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_toggle_v1_toggle_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_toggle_v1_toggle_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_toggle_v1_toggle_proto_goTypes,
		DependencyIndexes: file_toggle_v1_toggle_proto_depIdxs,
		EnumInfos:         file_toggle_v1_toggle_proto_enumTypes,
		MessageInfos:      file_toggle_v1_toggle_proto_msgTypes,
	}.Build()
	File_toggle_v1_toggle_proto = out.File
	file_toggle_v1_toggle_proto_rawDesc = nil
	file_toggle_v1_toggle_proto_goTypes = nil
	file_toggle_v1_toggle_proto_depIdxs = nil
}
